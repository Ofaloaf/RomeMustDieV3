namespace = fall_of_rome_events

fall_of_rome_events.100 = { #Split china up into warlord states
	type = country_event
	placement = root
	duration = 3

	title = fall_of_rome_events.100.t
	desc = fall_of_rome_events.100.d
	flavor = fall_of_rome_events.100.f

	event_image = {
		texture = "fall_of_rome"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	icon = "gfx/interface/icons/event_icons/event_fire.dds"

	trigger = {
		exists = c:WRE
		this = c:WRE
		NOT = { has_global_variable = wre_shatters }
	}

	immediate = {
		set_global_variable = wre_shatters
		
		set_variable = roman_central_government
		
		### Italian Warlords ###
		
		if = {
			limit = { 
				NOT = { exists = c:SIC }
				exists = s:STATE_SICILY.region_state:WRE 
			}
			create_country = { # Sicily
				tag = SIC
				origin = this
				state = s:STATE_SICILY.region_state:WRE
				on_created = {
					warlord_setup_effect = yes
					set_variable = warlord_state
				}
			}
			c:SIC = { save_scope_as = scope_SIC }
		}
		
		if = {
			limit = { 
				NOT = { exists = c:MDL }
				exists = s:STATE_LOMBARDY.region_state:WRE 
			}
			create_country = { # MDL
				tag = MDL
				origin = this
				state = s:STATE_LOMBARDY.region_state:WRE
				on_created = {
					warlord_setup_effect = yes
					set_variable = warlord_state
				}
			}
			c:MDL = { save_scope_as = scope_MDL }
		}
		
		if = {
			limit = { 
				NOT = { exists = c:SAR }
				exists = s:STATE_SARDINIA.region_state:WRE 
			}
			create_country = { # Sardinia
				tag = SAR
				origin = this
				state = s:STATE_SARDINIA.region_state:WRE
				on_created = {
					warlord_setup_effect = yes
					set_variable = warlord_state
				}
			}
			c:SAR = { save_scope_as = scope_SAR }
		}
		
		###
		
		### Illyrian Warlords ###
		
		if = {
			limit = { 
				NOT = { exists = c:DLM }
				exists = s:STATE_DALMATIA.region_state:WRE 
			}
			create_country = { # Dalmatia
				tag = DLM
				origin = this
				state = s:STATE_DALMATIA.region_state:WRE
				on_created = {
					warlord_setup_effect = yes
					set_variable = warlord_state
				}
			}
			c:DLM = { save_scope_as = scope_DLM }
		}
		
		###
		
		### Gallic Warlords ###
		
		if = {
			limit = { 
				NOT = { exists = c:ARV }
				exists = s:STATE_AUVERGNE_LIMOUSIN.region_state:WRE 
			}
			create_country = { # Arvernia
				tag = ARV
				origin = this
				state = s:STATE_AUVERGNE_LIMOUSIN.region_state:WRE
				on_created = {
					warlord_setup_effect = yes
					set_variable = warlord_state
				}
			}
			c:ARV = { save_scope_as = scope_ARV }
		}
		if = {
			limit = { 
				NOT = { exists = c:GTH }
				exists = s:STATE_LANGUEDOC.region_state:WRE 
			}
			create_country = { # Gothia
				tag = GTH
				origin = this
				state = s:STATE_LANGUEDOC.region_state:WRE
				on_created = {
					warlord_setup_effect = yes
					set_variable = warlord_state
				}
			}
			c:GTH = { save_scope_as = scope_GTH }
		}
		
		###
		
		### Hispanian Warlords ###

		if = {
			limit = { 
				NOT = { exists = c:BTC }
				exists = s:STATE_ANDALUSIA.region_state:WRE 
			}
			create_country = { # Baetica
				tag = BTC
				origin = this
				state = s:STATE_ANDALUSIA.region_state:WRE

				on_created = {
					warlord_setup_effect = yes
					set_variable = warlord_state
				}
			}
			c:BTC = { save_scope_as = scope_BTC }
		}

		if = {
			limit = { 
				NOT = { exists = c:TRR }
				exists = s:STATE_CATALONIA.region_state:WRE 
			}
			create_country = { # Tarraconensis
				tag = TRR
				origin = this
				state = s:STATE_CATALONIA.region_state:WRE
				on_created = {
					warlord_setup_effect = yes
					set_variable = warlord_state
				}
			}
			c:TRR = { save_scope_as = scope_TRR }
		}

		if = {
			limit = { 
				NOT = { exists = c:LST }
				exists = s:STATE_BADAJOZ.region_state:WRE 
			}
			create_country = { # Lusitania
				tag = LST
				origin = this
				state = s:STATE_BADAJOZ.region_state:WRE
				on_created = {
					warlord_setup_effect = yes
					set_variable = warlord_state
				}
			}
			c:LST = { save_scope_as = scope_LST }
		}
		
		if = {
			limit = { 
				NOT = { exists = c:NAV }
				exists = s:STATE_NAVARRA.region_state:WRE 
			}
			create_country = {  # Vasconia
				tag = NAV
				origin = this
				state = s:STATE_NAVARRA.region_state:WRE

				on_created = {
					warlord_setup_effect = yes
					set_variable = warlord_state
				}
			}
			c:NAV = { save_scope_as = scope_NAV }
		}

		if = {
			limit = { 
				NOT = { exists = c:BDL }
				exists = s:STATE_CASTILE.region_state:WRE 
			}
			create_country = {  # Bardulia
				tag = BDL
				origin = this
				state = s:STATE_CASTILE.region_state:WRE

				on_created = {
					warlord_setup_effect = yes
					set_variable = warlord_state
				}
			}
			c:BDL = { save_scope_as = scope_BDL }
		}
		
		if = {
			limit = { 
				NOT = { exists = c:GLI }
				exists = s:STATE_GALICIA.region_state:WRE 
			}
			create_country = {  # Gallaecia
				tag = GLI
				origin = this
				state = s:STATE_GALICIA.region_state:WRE

				on_created = {
					warlord_setup_effect = yes
					set_variable = warlord_state
				}
			}
			c:GLI = { save_scope_as = scope_GLI }
		}
		
		###
		
		every_subject_or_below = {
			make_independent = yes
		}

		random_country = {
			limit = {
				has_variable = warlord_state
				NOR = {
					has_variable = var_warlord_two
					has_variable = var_warlord_three
					has_variable = var_warlord_four 
				}
			}
			save_scope_as = scope_random_warlord_one
			set_variable = var_warlord_one
		}

		random_country = {
			limit = {
				has_variable = warlord_state
				NOR = {
					has_variable = var_warlord_one
					has_variable = var_warlord_three
					has_variable = var_warlord_four
				}
			}
			save_scope_as = scope_random_warlord_two
			set_variable = var_warlord_two
		}

		random_country = {
			limit = {
				has_variable = warlord_state
				NOR = {
					has_variable = var_warlord_one
					has_variable = var_warlord_two
					has_variable = var_warlord_four
				}
			}
			save_scope_as = scope_random_warlord_three
			set_variable = var_warlord_three
		}

		random_country = {
			limit = {
				has_variable = warlord_state
				NOR = {
					has_variable = var_warlord_one
					has_variable = var_warlord_two
					has_variable = var_warlord_three
				}
			}
			save_scope_as = scope_random_warlord_four
			set_variable = var_warlord_four
		}
	}

	option = {
		name = fall_of_rome_events.100.ab
		trigger = {
			exists = scope:scope_random_warlord_one
			is_player = yes
		}
		custom_tooltip = warlord_china_implosion_tt
		while = {
			limit = {
				any_scope_state = {
					is_capital = no
					any_neighbouring_state = {
						owner = { has_variable = warlord_state }
					}
				}
			}
			random_country = {
				limit = {
					has_variable = warlord_state
					any_neighbouring_state = {
						is_capital = no
						owner = ROOT
					}
				}
				save_scope_as = test_scope
			}
			random_scope_state = {
				limit = {
					is_capital = no
					any_neighbouring_state = {
						owner = scope:test_scope
					}
				}
				set_state_owner = scope:test_scope
			}
			clear_saved_scope = test_scope
		}
		play_as = scope:scope_random_warlord_one
	}

	option = {
		name = fall_of_rome_events.100.b
		trigger = {
			exists = scope:scope_random_warlord_two
			is_player = yes
		}
		custom_tooltip = warlord_china_implosion_tt
		while = {
			limit = {
				any_scope_state = {
					is_capital = no
					any_neighbouring_state = {
						owner = { has_variable = warlord_state }
					}
				}
			}
			random_country = {
				limit = {
					has_variable = warlord_state
					any_neighbouring_state = {
						is_capital = no
						owner = ROOT
					}
				}
				save_scope_as = test_scope
			}
			random_scope_state = {
				limit = {
					is_capital = no
					any_neighbouring_state = {
						owner = scope:test_scope
					}
				}
				set_state_owner = scope:test_scope
			}
			clear_saved_scope = test_scope
		}
		play_as = scope:scope_random_warlord_two
	}

	option = {
		name = fall_of_rome_events.100.c
		trigger = {
			exists = scope:scope_random_warlord_three
			is_player = yes
		}
		custom_tooltip = warlord_china_implosion_tt
		while = {
			limit = {
				any_scope_state = {
					is_capital = no
					any_neighbouring_state = {
						owner = { has_variable = warlord_state }
					}
				}
			}
			random_country = {
				limit = {
					has_variable = warlord_state
					any_neighbouring_state = {
						is_capital = no
						owner = ROOT
					}
				}
				save_scope_as = test_scope
			}
			random_scope_state = {
				limit = {
					is_capital = no
					any_neighbouring_state = {
						owner = scope:test_scope
					}
				}
				set_state_owner = scope:test_scope
			}
			clear_saved_scope = test_scope
		}
		play_as = scope:scope_random_warlord_three
	}

	option = {
		name = fall_of_rome_events.100.aa
		trigger = {
			exists = scope:scope_random_warlord_four
			is_player = yes
		}
		custom_tooltip = warlord_china_implosion_tt
		while = {
			limit = {
				any_scope_state = {
					is_capital = no
					any_neighbouring_state = {
						owner = { has_variable = warlord_state }
					}
				}
			}
			random_country = {
				limit = {
					has_variable = warlord_state
					any_neighbouring_state = {
						is_capital = no
						owner = ROOT
					}
				}
				save_scope_as = test_scope
			}
			random_scope_state = {
				limit = {
					is_capital = no
					any_neighbouring_state = {
						owner = scope:test_scope
					}
				}
				set_state_owner = scope:test_scope
			}
			clear_saved_scope = test_scope
		}
		play_as = scope:scope_random_warlord_four
	}

	option = {
		default_option = yes
		name = fall_of_rome_events.100.a
		custom_tooltip = warlord_china_implosion_tt
		while = {
			limit = {
				any_scope_state = {
					is_capital = no
					any_neighbouring_state = {
						owner = { has_variable = warlord_state }
					}
				}
			}
			random_country = {
				limit = {
					has_variable = warlord_state
					any_neighbouring_state = {
						is_capital = no
						owner = ROOT
					}
				}
				save_scope_as = test_scope
			}
			random_scope_state = {
				limit = {
					is_capital = no
					any_neighbouring_state = {
						owner = scope:test_scope
					}
				}
				set_state_owner = scope:test_scope
			}
			clear_saved_scope = test_scope
		}
	}
}

# Crisis of Illegitimacy startup event
fall_of_rome_events.1 = {
	type = country_event
	placement = ROOT
	
	title = fall_of_rome_events.1.t
	desc = fall_of_rome_events.1.d
	flavor = fall_of_rome_events.1.f
	
	event_image = {
		video = "unspecific_politicians_arguing"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	icon = "gfx/interface/icons/ig_icons/armed_forces.dds"
	
	duration = 3
	
	trigger = {
		# triggered by generic monthly pulse

		# can trigger for any Greco-Roman empire-tier country. None of you are free of this curse.
		country_tier = empire

		any_primary_culture = {
			# essentially the same as scripted trigger greco_roman_european_culture
			has_discrimination_trait = european_heritage
			OR = {
				has_discrimination_trait = romance_speaker
				has_discrimination_trait = greek_culture
			}
		}

		#
		NOT = { has_variable = caudillo_var }
		legitimacy < 75
		any_interest_group = {
			is_powerful = yes
			leader = {
				is_ruler = no
				has_role = general
				OR = {
					has_trait = ambitious
					has_trait = reckless
				}
			}
			leader.popularity > owner.ruler.popularity
		}
	}

	immediate = {
		set_variable = {
			name = caudillo_var
			value = 0
		}
		set_variable = { 
			name = caudillo_next 
			value = 0 
		}
		save_scope_as = rome_on_the_edge
		capital = {
			save_scope_as = capital_scope
		}
		set_global_variable = { # ensures military presidents aren't replaced super early
			name = continuismo_start_var
			months = long_modifier_time
		}

		#ig:ig_armed_forces = {
		#	save_scope_as = army_scope
		#}
		#random_scope_character = {
		#	limit = {
		#		has_role = general
		#	}
		#	save_scope_as = general_scope
		#}
		ordered_interest_group = {
			limit = {
				is_powerful = yes
				leader = {
					is_ruler = no
					OR = {
						has_trait = ambitious
						has_trait = reckless
					}
				}
				leader.popularity > ruler.popularity
			}
			order_by = ig_clout
			save_scope_as = ambitus_ig
			leader = {
				save_scope_as = ambitus_ig_leader
				set_variable = ambitus_ig_leader_tracked
			}
		}
	}
	option = { 
		name = fall_of_rome_events.1.a
		default_option = yes
		add_journal_entry = { type = je_crisis_of_illegitimacy }
		if = { 
			limit = {	# democratic states will have an easier start
				country_has_voting_franchise = yes
			}
			custom_tooltip = roman_illegitimacy_democratic_institutions_good
			change_variable = {
				name = caudillo_var
				add = 400
			}
		}
		else = {
			change_variable = {
				name = caudillo_var
				add = 600
			}
		}
	}
}

# Return of Legitimacy
fall_of_rome_events.2 = {
	type = country_event
	placement = ROOT
	
	title = fall_of_rome_events.2.t
	desc = fall_of_rome_events.2.d
	flavor = fall_of_rome_events.2.f
	
	event_image = {
		video = "unspecific_military_parade"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	icon = "gfx/interface/icons/ig_icons/armed_forces.dds"
	
	duration = 3
	
	trigger = {
		# triggered by je_caudillo
	}

	immediate = {
		ordered_interest_group = {
			limit = {
				is_powerful = yes
			}
			order_by = ig_clout
			save_scope_as = most_powerful_ig
			leader = {
				save_scope_as = most_powerful_ig_leader
			}
		}
	}
	option = { 
		name = fall_of_rome_events.2.a
		default_option = yes

		remove_modifier = age_of_caudillos_modifier
	}
}

# No More Games - based off caudillo.3, the Fist Clenches
fall_of_rome_events.3 = {
	type = country_event
	placement = ROOT
	
	title = fall_of_rome_events.3.t
	desc = fall_of_rome_events.3.d
	flavor = fall_of_rome_events.3.f
	
	event_image = {
		texture = "fall_of_rome"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	icon = "gfx/interface/icons/event_icons/event_fire.dds"
	
	duration = 3
	
	trigger = {
		# triggered by je_crisis_of_illegitimacy
	}

	immediate = {
		capital = {
			save_scope_as = capital_scope
		}
		ruler = {
			save_scope_as = main_character
		}
		save_scope_as = main_character_country
		ordered_interest_group = {
			limit = {
				is_powerful = yes
				#leader = {
				#	is_ruler = no
				#	OR = {
				#		has_trait = ambitious
				#		has_trait = reckless
				#	}
				#}
				#leader.popularity > ruler.popularity
			}
			order_by = ig_clout
			save_scope_as = ambitus_ig
			leader = {
				save_scope_as = ambitus_ig_leader
			}
		}
	}
	option = { 
		name = fall_of_rome_events.3.a
		default_option = yes
		hidden_effect = {
			remove_modifier = age_of_caudillos_modifier
		}


		every_subject_or_below = {
			limit = {
				NOT = { any_overlord_or_above = { NOT = { ROOT = this } } }
				NOT = { is_subject_type = subject_type_personal_union }
			}
			make_independent = yes
		}

		# empire becomes a kingdom. couple of specific tag changes, then going for dynamics
		if = {
			limit = {
				capital = {
					region = sr:region_italy
				}
				NOT = { exists = c:ITA }
			}
			change_tag = ITA
		}
		else_if = {
			limit = {
				capital = {
					region = sr:region_balkans
				}
				NOT = { exists = c:ILY }
			}
			change_tag = ILY
		}
		else_if = {
			limit = {
				capital = {
					region = sr:region_north_africa
				}
				NOT = { exists = c:AFR }
			}
			change_tag = AFR
		}
		else_if = {
			limit = {
				capital = {
					region = sr:region_occitania
				}
				NOT = { exists = c:SPT }
			}
			change_tag = SPT
		}
		else_if = {
			limit = {
				capital = {
					state_region = s:STATE_PICARDY
				}
				NOT = { exists = c:SOI }
			}
			change_tag = SOI
		}
		else_if = {
			limit = {
				capital = {
					region = sr:region_thracia
				}
				NOT = { exists = c:GRE }
			}
			change_tag = GRE
		}
		# dynamics
		else_if = {
			limit = {
				NOT = { exists = c:RE1 }
			}
			change_tag = RE1
		}
		else_if = {
			limit = {
				NOT = { exists = c:RE2 }
			}
			change_tag = RE2
		}
		else_if = {
			limit = {
				NOT = { exists = c:RE3 }
			}
			change_tag = RE3
		}
		else_if = {
			limit = {
				NOT = { exists = c:RE4 }
			}
			change_tag = RE4
		}

		hidden_effect = {
			scope:main_character = {
				kill_character = yes
			}
		}
		scope:ambitus_ig_leader = {
			set_character_as_ruler = yes
		}

		### Implosion outside the Imperial Core for whatever's left. If it's outside traditional boundaries of the old Roman Empire, the central remnant inherits them as unincorporated states. I presume they're colonies.
		hidden_effect = {

			# Italy implodes if capital not in Italy #
			if = {
				limit = {
					capital = {
						NOT = { region = sr:region_italy }
					}
				}
				if = {
					limit = { 
						NOT = { exists = c:SIC }
						any_scope_state = { state_region = s:STATE_SICILY }
					}
					random_scope_state = { 
						limit = { state_region = s:STATE_SICILY } 
						save_temporary_scope_as = sicilian_state
					}
					create_country = {
						tag = SIC
						origin = this
						state = scope:sicilian_state
						on_created = {
							warlord_setup_effect = yes
						}
					}
				}
				if = {
					limit = { 
						NOT = { exists = c:MDL }
						any_scope_state = { state_region = s:STATE_LOMBARDY }
					}
					random_scope_state = { 
						limit = { state_region = s:STATE_LOMBARDY } 
						save_temporary_scope_as = lombardy_state
					}
					create_country = {
						tag = MDL
						origin = this
						state = scope:lombardy_state
						on_created = {
							warlord_setup_effect = yes
						}
					}
				}
				if = {
					limit = { 
						NOT = { exists = c:ITA }
						any_scope_state = { region = sr:region_italy }
					}
					random_scope_state = { 
						limit = { region = sr:region_italy } 
						save_temporary_scope_as = italian_state
					}
					create_country = {
						tag = ITA
						origin = this
						state = scope:italian_state
						on_created = {
						}
					}
					if = {
						limit = { exists = c:ITA}
						every_scope_state = {
							limit = {
								region = sr:region_italy
							}
							set_state_owner = c:ITA
						}
					}
				}
			}
			# Illyricum implodes if capital not in Balkans #
			if = {
				limit = {
					capital = {
						NOT = { region = sr:region_balkans }
					}
				}
				if = {
					limit = { 
						NOT = { exists = c:ALB }
						any_scope_state = { state_region = s:STATE_ALBANIA }
					}
					random_scope_state = { 
						limit = { state_region = s:STATE_ALBANIA } 
						save_temporary_scope_as = albania_state
					}
					create_country = {
						tag = ALB
						origin = this
						state = scope:albania_state
						on_created = {
						}
					}
				}
				if = {
					limit = { 
						NOT = { exists = c:ILY }
						any_scope_state = { region = sr:region_balkans }
					}
					random_scope_state = { 
						limit = { region = sr:region_balkans } 
						save_temporary_scope_as = balkan_state
					}
					create_country = {
						tag = ILY
						origin = this
						state = scope:balkan_state
						on_created = {
						}
					}
					if = {
						limit = { exists = c:ILY }
						every_scope_state = {
							limit = {
								region = sr:region_balkans
							}
							set_state_owner = c:ILY
						}
					}
				}
			}
			# Gaul implodes if capital not in Gallia #
			if = {
				limit = {
					capital = {
						NOR = { 
							region = sr:region_france
							region = sr:region_occitania
						}
					}
				}
				if = {
					limit = { 
						NOT = { exists = c:GTH }
						any_scope_state = { state_region = s:STATE_LANGUEDOC }
					}
					random_scope_state = { 
						limit = { state_region = s:STATE_LANGUEDOC } 
						save_temporary_scope_as = languedoc_state
					}
					create_country = {
						tag = GTH
						origin = this
						state = scope:languedoc_state
						on_created = {
						}
					}
					if = {
						limit = { exists = c:GTH }
						every_scope_state = {
							limit = { state_region = { is_homeland = cu:gothic } }
							set_state_owner = c:GTH
						}
					}
				}
				if = {
					limit = { 
						NOT = { exists = c:BGN }
						any_scope_state = { state_region = s:STATE_WEST_SWITZERLAND }
					}
					random_scope_state = { 
						limit = { state_region = s:STATE_WEST_SWITZERLAND } 
						save_temporary_scope_as = west_switzerland_state
					}
					create_country = {
						tag = BGN
						origin = this
						state = scope:west_switzerland_state
						on_created = {
						}
					}
					if = {
						limit = { exists = c:BGN }
						every_scope_state = {
							limit = { 
								state_region = { 
									OR = { 
										is_homeland = cu:burgundian 
										s:STATE_SAVOY = this # i just want pretty borders
									} 
								}
							}
							set_state_owner = c:BGN
						}
					}
				}
				if = {
					limit = { 
						NOT = { exists = c:BRI }
						any_scope_state = { state_region = s:STATE_BRITTANY }
					}
					random_scope_state = { 
						limit = { state_region = s:STATE_BRITTANY } 
						save_temporary_scope_as = britanny_state
					}
					create_country = {
						tag = BRI
						origin = this
						state = scope:britanny_state
						on_created = {
						}
					}
				}
				if = {
					limit = { 
						NOT = { exists = c:SOI }
						any_scope_state = { state_region = s:STATE_PICARDY }
					}
					random_scope_state = { 
						limit = { state_region = s:STATE_PICARDY } 
						save_temporary_scope_as = soissons_state
					}
					create_country = {
						tag = SOI
						origin = this
						state = scope:soissons_state
						on_created = {
						}
					}
					if = {
						limit = { exists = c:SOI }
						every_scope_state = {
							limit = {
								OR = {
									region = sr:region_france
									region = sr:region_rhine
								}
							}
							set_state_owner = c:SOI
						}
					}
				}
				if = {
					limit = { 
						NOT = { exists = c:SPT }
						any_scope_state = { region = sr:region_occitania }
					}
					random_scope_state = { 
						limit = { region = sr:region_occitania } 
						save_temporary_scope_as = septimania_state
					}
					create_country = {
						tag = SPT
						origin = this
						state = scope:septimania_state
						on_created = {
						}
					}
					if = {
						limit = { exists = c:SPT }
						every_scope_state = {
							limit = {
								region = sr:region_occitania
							}
							set_state_owner = c:SPT
						}
					}
				}
				if = {
					limit = { 
						any_scope_state = { 
							OR = {
								region = sr:region_france
								region = sr:region_occitania
								region = sr:region_rhine
							}
							is_capital = no
						}
					}
					random_scope_state = { 
						limit = { 
							OR = {
								region = sr:region_france
								region = sr:region_occitania
								region = sr:region_rhine
							}
							is_capital = no
						} 
						save_temporary_scope_as = gallic_state
					}
					create_dynamic_country = {
						origin = this
						tier = kingdom
						culture = cu:gallic
						capital = scope:gallic_state
						cede_state_trigger = {
						}
						on_created = {
							set_variable = dynamic_roman_breakaway
							set_variable = dynamic_gallia
							if = {
								limit = {
									capital = {
										state_region = { is_homeland = cu:septimanian }
									}
								}
								add_primary_culture = cu:septimanian
							}
						}
					}
					if = {
						limit = { 
							any_country = {
								has_variable = dynamic_gallia
							}
						}
						random_country = {
							limit = {
								has_variable = dynamic_gallia
							}
							save_temporary_scope_as = dynamic_gallia_country
						}
						every_scope_state = {
							limit = {
								OR = {
									region = sr:region_france
									region = sr:region_occitania
									region = sr:region_rhine
								}
							}
							set_state_owner = scope:dynamic_gallia_country
						}
						scope:dynamic_gallia_country = { remove_variable = dynamic_gallia }
					}
				}
			}
			# Hispania implodes if capital not in Hispania #
			if = {
				limit = {
					capital = {
						NOT = { region = sr:region_iberia }
					}
				}
				if = {
					limit = { 
						NOT = { exists = c:LST }
						any_scope_state = { 
							OR = {
								state_region = s:STATE_BADAJOZ
								state_region = s:STATE_BEIRA
								state_region = s:STATE_ESTREMADURA
								state_region = s:STATE_ALENTEJO
								state_region = s:STATE_MADEIRA
							}
							is_capital = no # covering bases in case somehow the capital is in madeira
						}
					}
					random_scope_state = { 
						limit = {
							OR = {
								state_region = s:STATE_BADAJOZ
								state_region = s:STATE_BEIRA
								state_region = s:STATE_ESTREMADURA
								state_region = s:STATE_ALENTEJO
								state_region = s:STATE_MADEIRA
							}
							is_capital = no
						} 
						save_temporary_scope_as = lusitania_state
					}
					create_country = {
						tag = LST
						origin = this
						state = scope:lusitania_state
						on_created = {
						}
					}
					if = {
						limit = { exists = c:LST }
						every_scope_state = {
							limit = {
								OR = {
									state_region = s:STATE_BADAJOZ
									state_region = s:STATE_BEIRA
									state_region = s:STATE_ESTREMADURA
									state_region = s:STATE_ALENTEJO
									state_region = s:STATE_MADEIRA
								}
							}
							set_state_owner = c:LST
						}
					}
				}
				if = {
					limit = { 
						NOT = { exists = c:NAV }
						any_scope_state = { state_region = s:STATE_NAVARRA }
					}
					random_scope_state = { 
						limit = { state_region = s:STATE_NAVARRA } 
						save_temporary_scope_as = navarra_state
					}
					create_country = {
						tag = NAV
						origin = this
						state = scope:navarra_state
						on_created = {
						}
					}
				}
				if = {
					limit = { 
						any_scope_state = { 
							region = sr:region_iberia
							is_capital = no
						}
					}
					random_scope_state = { 
						limit = { 
							region = sr:region_iberia
							is_capital = no
						} 
						save_temporary_scope_as = hispania_state
					}
					create_dynamic_country = {
						origin = this
						tier = kingdom
						culture = cu:hispanian
						capital = scope:hispania_state
						cede_state_trigger = {
						}
						color = { 166 123 191 }
						on_created = {
							set_variable = dynamic_roman_breakaway
							set_variable = dynamic_hispania
						}
					}
					if = {
						limit = { 
							sr:region_iberia = {
								any_scope_country = {
									has_variable = dynamic_hispania
								}
							}
						}
						sr:region_iberia = {
							random_country = {
								limit = {
									has_variable = dynamic_hispania
								}
								save_temporary_scope_as = dynamic_hispania_country
							}
						}
						every_scope_state = {
							limit = {
								region = sr:region_iberia
							}
							set_state_owner = scope:dynamic_hispania_country
						}
						scope:dynamic_hispania_country = { remove_variable = dynamic_hispania }
					}
				}
			}

			# North Africa implodes if capital not in North Africa #
			if = {
				limit = {
					capital = {
						NOT = { region = sr:region_north_africa }
					}
					any_scope_state = {
						region = sr:region_north_africa
					}
				}
				if = {
					limit = { 
						NOT = { exists = c:AFR }
						any_scope_state = { region = sr:region_north_africa }
					}
					random_scope_state = { 
						limit = { region = sr:region_north_africa } 
						save_temporary_scope_as = african_state
					}
					create_country = {
						tag = AFR
						origin = this
						state = scope:african_state
						on_created = {
						}
					}
					if = {
						limit = { exists = c:AFR }
						every_scope_state = {
							limit = {
								region = sr:region_north_africa
								is_capital = no
							}
							set_state_owner = c:AFR
						}
					}
				}
				else = {
					random_scope_state = { 
						limit = { region = sr:region_north_africa } 
						save_temporary_scope_as = african_state
					}
					create_dynamic_country = {
						origin = this
						tier = kingdom
						culture = cu:africanu
						capital = scope:african_state
						cede_state_trigger = {
						}
						color = { 184 72 35 }
						on_created = {
							set_variable = dynamic_roman_breakaway
							set_variable = dynamic_africa
						}
					}
					if = {
						limit = { 
							sr:region_north_africa = {
								any_scope_country = {
									has_variable = dynamic_africa
								}
							}
						}
						sr:region_north_africa = {
							random_country = {
								limit = {
									has_variable = dynamic_africa
								}
								save_temporary_scope_as = dynamic_africa_country
							}
						}
						every_scope_state = {
							limit = {
								region = sr:region_north_africa
							}
							set_state_owner = scope:dynamic_africa_country
						}
						scope:dynamic_africa_country = { remove_variable = dynamic_africa }
					}
				}
			}

			# THE EASTERN EMPIRE #
			if = {
				limit = {
					capital = {
						NOT = { region = sr:region_thracia }
					}
				}
				if = {
					limit = { 
						NOT = { exists = c:SER }
						any_scope_state = { 
							OR = {
								state_region = s:STATE_NORTHERN_SERBIA 
								state_region = s:STATE_SOUTHERN_SERBIA
							}
						}
					}
					random_scope_state = { 
						limit = { 
							OR = {
								state_region = s:STATE_NORTHERN_SERBIA 
								state_region = s:STATE_SOUTHERN_SERBIA
							}
						} 
						save_temporary_scope_as = serbia_state
					}
					create_country = {
						tag = SER
						origin = this
						state = scope:serbia_state
						on_created = {
						}
					}
					if = {
						limit = { exists = c:SER }
						every_scope_state = {
							limit = {
								state_region = { is_homeland = cu:serb }
								is_capital = no
							}
							set_state_owner = c:SER
						}
					}
				}
				if = {
					limit = { 
						NOT = { exists = c:BUL }
						any_scope_state = { 
							OR = {
								state_region = s:STATE_BULGARIA 
								state_region = s:STATE_NORTHERN_THRACE
								state_region = s:STATE_DOBRUDJA
								state_region = s:STATE_WALLACHIA
								state_region = s:STATE_SOUTHERN_SERBIA
							}
						}
					}
					random_scope_state = { 
						limit = { 
							OR = {
								state_region = s:STATE_BULGARIA 
								state_region = s:STATE_NORTHERN_THRACE
								state_region = s:STATE_DOBRUDJA
								state_region = s:STATE_WALLACHIA
								state_region = s:STATE_SOUTHERN_SERBIA
							}
						} 
						save_temporary_scope_as = heptadic_state
					}
					create_country = {
						tag = BUL
						origin = this
						state = scope:heptadic_state
						on_created = {
						}
					}
					if = {
						limit = { exists = c:BUL }
						every_scope_state = {
							limit = {
								OR = {
									state_region = s:STATE_BULGARIA 
									state_region = s:STATE_NORTHERN_THRACE
									state_region = s:STATE_DOBRUDJA
									state_region = s:STATE_WALLACHIA
									state_region = s:STATE_SOUTHERN_SERBIA
								}
								is_capital = no
							}
							set_state_owner = c:BUL
						}
					}
				}
				if = {
					limit = { 
						NOT = { exists = c:GRE }
						any_scope_state = { region = sr:region_thracia }
					}
					random_scope_state = { 
						limit = { region = sr:region_thracia } 
						save_temporary_scope_as = greek_state
					}
					create_country = {
						tag = GRE
						origin = this
						state = scope:greek_state
						on_created = {
							if = {
								limit = {
									NOT = { country_has_primary_culture = cu:greek }
								}
								add_primary_culture = cu:greek
							}
						}
					}
					if = {
						limit = { exists = c:GRE }
						every_scope_state = {
							limit = {
								region = sr:region_thracia
								is_capital = no
							}
							set_state_owner = c:GRE
						}
					}
				}
			}

			# Cyprus is just doing its thing, man #
			if = {
				limit = { 
					NOT = { exists = c:CYP }
					any_scope_state = { state_region = s:STATE_CYPRUS is_capital = no }
				}
				random_scope_state = { 
					limit = { state_region = s:STATE_CYPRUS } 
					save_temporary_scope_as = cyprus_state
				}
				create_country = {
					tag = CYP
					origin = this
					state = scope:cyprus_state
					on_created = {
					}
				}
			}

			# Asia/Anatolia
			if = {
				limit = {
					capital = {
						NOT = { region = sr:region_anatolia }
					}
				}
				if = {
					limit = { 
						any_scope_state = { 
							state_region = s:STATE_ADANA
						}
					}
					random_scope_state = { 
						limit = { 
							state_region = s:STATE_ADANA
						} 
						save_temporary_scope_as = cilicia_state
					}
					create_dynamic_country = {
						origin = this
						tier = kingdom
						culture = cu:greek
						capital = scope:cilicia_state
						cede_state_trigger = {
							state_region = s:STATE_ADANA
						}
						color = { 150 162 203 }
						on_created = {
							set_variable = dynamic_roman_breakaway
							set_variable = dynamic_cilicia
						}
					}
				}
				if = {
					limit = { 
						any_scope_state = { region = sr:region_anatolia }
					}
					random_scope_state = { 
						limit = { region = sr:region_anatolia } 
						save_temporary_scope_as = anatolia_state
					}
					create_dynamic_country = {
						origin = this
						tier = kingdom
						culture = cu:greek
						capital = scope:anatolia_state
						cede_state_trigger = {
						}
						color = { 91 51 92 }
						on_created = {
							set_variable = dynamic_roman_breakaway
							set_variable = dynamic_anatolia
						}
					}
					if = {
						limit = { 
							sr:region_anatolia = {
								any_scope_country = {
									has_variable = dynamic_anatolia
								}
							}
						}
						sr:region_anatolia = {
							random_scope_country = {
								limit = {
									has_variable = dynamic_anatolia
								}
								save_temporary_scope_as = dynamic_anatolia_country
							}
						}
						every_scope_state = {
							limit = {
								region = sr:region_anatolia
							}
							set_state_owner = scope:dynamic_anatolia_country
						}
						scope:dynamic_anatolia_country = { remove_variable = dynamic_anatolia }
					}
				}
			}

			# Syria breaks free if capital not in the East #
			if = {
				limit = {
					capital = {
						NOT = { region = sr:region_arabic }
					}
				}
				if = {
					limit = { 
						NOT = { exists = c:SYR }
						any_scope_state = { region = sr:region_arabic }
					}
					random_scope_state = { 
						limit = { region = sr:region_arabic } 
						save_temporary_scope_as = oriens_state
					}
					create_country = {
						tag = SYR
						origin = this
						state = scope:oriens_state
						on_created = {
							set_variable = syria_oriens
							add_primary_culture = cu:greek
							add_primary_culture = cu:assyrian
						}
					}
					if = {
						limit = { exists = c:SYR }
						every_scope_state = {
							limit = {
								region = sr:region_arabic
								is_capital = no
							}
							set_state_owner = c:SYR
						}
					}
				}
			}
			# Egypt breaks free if capital not in Egypt #
			if = {
				limit = {
					capital = {
						NOT = { region = sr:region_nile_basin }
					}
				}
				if = {
					limit = { 
						NOT = { exists = c:EGY }
						any_scope_state = { region = sr:region_nile_basin }
					}
					random_scope_state = { 
						limit = { region = sr:region_nile_basin } 
						save_temporary_scope_as = egyptian_state
					}
					create_country = {
						tag = EGY
						origin = this
						state = scope:egyptian_state
						on_created = {
						}
					}
					if = {
						limit = { exists = c:EGY }
						every_scope_state = {
							limit = {
								region = sr:region_nile_basin
								is_capital = no
							}
							set_state_owner = c:EGY
						}
					}
				}
			}
			# Caucasus
			# and Dnieper
			if = {
				limit = {
					capital = {
						NOR = { 
							region = sr:region_caucasus 
							region = sr:region_dnieper
						}
					}
				}
				# taking car of ERE's Chorzene/STATE_KARS ownership first
				if = {
					limit = { 
						exists = c:ARM
						c:ARM = {
							is_at_war = no
							any_scope_state = {
								OR = {
									state_region = s:STATE_KARS
									state_region = s:STATE_ERZURUM
									state_region = s:STATE_ARMENIA
									state_region = s:STATE_GREATER_CAUCASUS
								}
							}
						}
						any_scope_state = { 
							state_region = s:STATE_KARS
						}
					}
					random_scope_state = {
						limit = {
							state_region = s:STATE_KARS
						}
						set_state_owner = c:ARM
					}
				}
				else_if = {
					limit = { 
						exists = c:GEO
						c:GEO = {
							is_at_war = no
							any_scope_state = {
								OR = {
									state_region = s:STATE_KARS
									state_region = s:STATE_ERZURUM
									state_region = s:STATE_ARMENIA
									state_region = s:STATE_GREATER_CAUCASUS
								}
							}
						}
						any_scope_state = { 
							state_region = s:STATE_KARS
						}
					}
					random_scope_state = {
						limit = {
							state_region = s:STATE_KARS
						}
						set_state_owner = c:ARM
					}
				}
				else_if = {
					limit = { 
						any_scope_state = { state_region = s:STATE_KARS }
						NOT = { 
							any_scope_state = { # only spin off Chorzene as its own state if Dynamic Iberia can't form
								OR = {
									state_region = s:STATE_GREATER_CAUCASUS
									state_region = s:STATE_ARMENIA
									state_region = s:STATE_AZERBAIJAN
								}
							}
						}
					}
					random_scope_state = { 
						limit = { state_region = s:STATE_KARS } 
						save_temporary_scope_as = chorzene_state
					}
					create_dynamic_country = {
						origin = this
						tier = kingdom
						culture = cu:greek
						capital = scope:chorzene_state
						cede_state_trigger = {
							owner = scope:main_character_country
							state_region = s:STATE_KARS
						}
						color = { 174 174 217 }
						on_created = {
							set_variable = dynamic_roman_breakaway
							set_variable = dynamic_chorzene
						}
					}
					if = {
						limit = { 
							sr:region_caucasus = {
								any_scope_country = {
									has_variable = dynamic_chorzene
								}
							}
						}
						sr:region_caucasus = {
							random_scope_country = {
								limit = {
									has_variable = dynamic_chorzene
								}
								save_temporary_scope_as = dynamic_chorzene_country
							}
						}
						every_scope_state = {
							limit = {
								state_region = s:STATE_KARS
							}
							set_state_owner = scope:dynamic_chorzene_country
						}
						scope:dynamic_chorzene_country = { remove_variable = dynamic_chorzene }
					}
				}

				if = {
					limit = { 
						any_scope_state = { 
							OR = {
								state_region = s:STATE_KARS
								state_region = s:STATE_GREATER_CAUCASUS
								state_region = s:STATE_ARMENIA
								state_region = s:STATE_AZERBAIJAN
							}
						}
					}
					random_scope_state = { 
						limit = {
							OR = {
								state_region = s:STATE_KARS
								state_region = s:STATE_GREATER_CAUCASUS
								state_region = s:STATE_ARMENIA
								state_region = s:STATE_AZERBAIJAN
							}
						} 
						save_temporary_scope_as = iberia_state
					}
					create_dynamic_country = {
						origin = this
						tier = kingdom
						culture = cu:greek
						capital = scope:iberia_state
						cede_state_trigger = {
						}
						color = { 174 174 217 }
						on_created = {
							set_variable = dynamic_roman_breakaway
							set_variable = dynamic_iberia
							if = {
								limit = {
									capital = {
										state_region = { is_homeland = cu:georgian }
									}
								}
								add_primary_culture = cu:georgian
							}
							if = {
								limit = {
									capital = {
										state_region = { is_homeland = cu:armenian }
									}
								}
								add_primary_culture = cu:armenian
							}
						}
					}
					if = {
						limit = { 
							sr:region_caucasus = {
								any_scope_country = {
									has_variable = dynamic_iberia
								}
							}
						}
						sr:region_caucasus = {
							random_scope_country = {
								limit = {
									has_variable = dynamic_iberia
								}
								save_temporary_scope_as = dynamic_iberia_country
							}
						}
						every_scope_state = {
							limit = {
								OR = {
									state_region = s:STATE_KARS
									state_region = s:STATE_GREATER_CAUCASUS
									state_region = s:STATE_ARMENIA
									state_region = s:STATE_AZERBAIJAN
								}
							}
							set_state_owner = scope:dynamic_iberia_country
						}
					}
				}

				if = { # Cimmeria/Bosporan Kingdom/Bosporan Domain. technically not originating in the Caucausus Region but look it works with the effect okay
					limit = { 
						any_scope_state = { 
							state_region = s:STATE_CRIMEA
							is_capital = no
						}
					}
					random_scope_state = { 
						limit = {
							state_region = s:STATE_CRIMEA
						} 
						save_temporary_scope_as = bosporan_kingdom_state
					}
					create_dynamic_country = {
						origin = this
						tier = kingdom
						culture = cu:greek
						capital = scope:bosporan_kingdom_state
						cede_state_trigger = {
						}
						color = { 213 106 133 }
						on_created = {
							set_variable = dynamic_roman_breakaway
							set_variable = dynamic_bosporan
						}
					}
					if = {
						limit = { 
							sr:region_dnieper = {
								any_scope_country = {
									has_variable = dynamic_bosporan
								}
							}
						}
						sr:region_dnieper = {
							random_scope_country = {
								limit = {
									has_variable = dynamic_bosporan
								}
								save_temporary_scope_as = dynamic_bosporan_country
							}
						}
						every_scope_state = {
							limit = {
								OR = {
									region = sr:region_dnieper
									state_region = s:STATE_CRIMEA
									state_region = s:STATE_KUBAN
									state_region = s:STATE_LUHANSK
									state_region = s:STATE_ROSTOV
									state_region = s:STATE_ASTRAKHAN
									state_region = s:STATE_DAGESTAN
								}
							}
							set_state_owner = scope:dynamic_bosporan_country
						}
						scope:dynamic_bosporan_country = { remove_variable = dynamic_bosporan }
					}
				}
			}

			# unincorporating any states outside the old Roman sphere
			if = {
				limit = {
					any_scope_state = {
						NOR = {
							region = sr:region_south_germany
							region = sr:region_england
							region = sr:region_iberia
							region = sr:region_france
							region = sr:region_occitania
							region = sr:region_rhine
							region = sr:region_italy	
							region = sr:region_danubia
							region = sr:region_balkans
							region = sr:region_thracia
							region = sr:region_nile_basin
							region = sr:region_north_africa
							region = sr:region_anatolia
							region = sr:region_arabic
							region = sr:region_caucasus
						}
						is_capital = no
						is_incorporated = yes
					}
				}
				every_scope_state = {
					limit = {
						NOR = {
							region = sr:region_south_germany
							region = sr:region_england
							region = sr:region_iberia
							region = sr:region_france
							region = sr:region_occitania
							region = sr:region_rhine
							region = sr:region_italy	
							region = sr:region_danubia
							region = sr:region_balkans
							region = sr:region_thracia
							region = sr:region_nile_basin
							region = sr:region_north_africa
							region = sr:region_anatolia
							region = sr:region_arabic
							region = sr:region_caucasus
						}
						is_capital = no
						is_incorporated = yes
					}
					set_state_type = unincorporated
				}
			}
		}
	}
}

fall_of_rome_events.4 = { # Conflict of the Urban Orders in State
	type = country_event
	placement = scope:collegia_urban_state
	duration = 3
	
	cooldown = { months = short_modifier_time }

	title = fall_of_rome_events.4.t
	desc = {
		first_valid = {
			triggered_desc = {
				desc = fall_of_rome_events.4.d1
				trigger = {
					NOR = {
						exists = scope:labor_interest_group
						exists = scope:plutocrat_interest_group
					}
				}
			}
			triggered_desc = {
				desc = fall_of_rome_events.4.d2
				trigger = {
					exists = scope:labor_interest_group
					NOT = { exists = scope:plutocrat_interest_group }
				}
			}
			triggered_desc = {
				desc = fall_of_rome_events.4.d3
				trigger = {
					NOT = { exists = scope:labor_interest_group }
					exists = scope:plutocrat_interest_group
				}
			}
			triggered_desc = {
				desc = fall_of_rome_events.4.d4
				trigger = {
					exists = scope:labor_interest_group
					exists = scope:plutocrat_interest_group
				}
			}
		}
	}
	flavor = fall_of_rome_events.4.f

	event_image = {
		video = "unspecific_vandalized_storefront"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	icon = "gfx/interface/icons/event_icons/event_fire.dds"

	trigger = {
		ruler.interest_group = {
			NOR = { 
				has_modifier = ruler_prioritizes_imperial_politics 
				has_modifier = ruler_disinterest_in_imperial_politics
			}
		}
		capital.region = {
			save_temporary_scope_as = temp_capital_region
		}
		any_scope_state = {	# the event must occur in the provinces, away from the metropole
			is_capital = no
			NOT = {
				region = scope:temp_capital_region
				OR = {
					has_modifier = collegia_fighting
					has_modifier = suppressing_the_collegia
					has_modifier = labor_collegia_victorious
					has_modifier = plutocrat_societates_victorious
				}
			}
			total_urbanization > 8
		}
	}
	
	immediate = {
		ruler = {
			save_scope_as = main_character
			interest_group = {
				save_scope_as = main_character_ig
			}
		}
		capital.region = {
			save_scope_as = capital_region
		}
		random_scope_state = {
			limit = {
				is_capital = no
				NOT = {
					region = scope:capital_region
					OR = {
						has_modifier = collegia_fighting
						has_modifier = suppressing_the_collegia
						has_modifier = labor_collegia_victorious
						has_modifier = plutocrat_societates_victorious
					}
				}
				total_urbanization > 8
			}
			save_scope_as = collegia_urban_state
		}
		
		if = {
			limit = {
				any_interest_group = {
					OR = {
						is_interest_group_type = ig_trade_unions
						leader = {
							has_socialist_ideology = yes
						}
					}
					is_powerful = yes
					NOR = {
						is_insurrectionary = yes
						is_revolutionary = yes
					}
				}
			}
			random_interest_group = {
				limit = {
					OR = {
						is_interest_group_type = ig_trade_unions
						leader = {
							has_socialist_ideology = yes
						}
					}
					is_powerful = yes
					NOR = {
						is_insurrectionary = yes
						is_revolutionary = yes
					}
				}
				save_scope_as = labor_interest_group
			}
		}
				
		if = {
			limit = {
				any_interest_group = {
					OR = {
						is_interest_group_type = ig_industrialists
						leader = {
							has_reactionary_ideology = yes
						}
					}
					is_powerful = yes
					NOR = {
						is_insurrectionary = yes
						is_revolutionary = yes
					}
				}
			}
			random_interest_group = {
				limit = {
					OR = {
						is_interest_group_type = ig_industrialists
						leader = {
							has_reactionary_ideology = yes
						}
					}
					is_powerful = yes
					NOR = {
						is_insurrectionary = yes
						is_revolutionary = yes
					}
				}
				save_scope_as = plutocrat_interest_group
			}
		}
	}
	
	cancellation_trigger = {
		NOT = {
			exists = scope:collegia_urban_state
		}
	}
	
	option = {
		name = fall_of_rome_events.4.a
		default_option = yes
		
		scope:main_character_ig = {
			add_modifier = {
				name = ruler_prioritizes_imperial_politics
				months = normal_modifier_time
			}
		}
		
		if = {
			limit = {
				country_has_voting_franchise = yes
			}
			custom_tooltip = fall_of_rome_events_4_let_local_reps_handle_it
			scope:collegia_urban_state = {
				add_modifier = {
					name = collegia_fighting
					months = normal_modifier_time
					multiplier = 0.5
				}
			}
		}
		else = {
			scope:collegia_urban_state = {
				add_modifier = {
					name = collegia_fighting
					months = normal_modifier_time
				}
			}
		}
		
		if = {
			limit = {
				scope:main_character = {
					OR = {
						has_role = general
						has_trait = brave
						has_trait = traditionalist_commander
						has_trait = popular_commander
						has_trait = celebrity_commander
					}
				}
			}
			custom_tooltip = did_not_meet_expectations_FoRE3_stayed_at_home
			scope:main_character = {
				refused_to_do_what_was_expected_effect = yes
			}
		}
	}
	
	option = {
		name = fall_of_rome_events.4.b
		
		if = {
			limit = {
				country_has_voting_franchise = yes
			}
			custom_tooltip = fall_of_rome_events_3_fellow_partisans_mitigate_neglect
			scope:main_character_ig = {
				add_modifier = {
					name = ruler_disinterest_in_imperial_politics
					months = normal_modifier_time
					multiplier = 0.5
				}
			}
		}
		else = {
			scope:main_character_ig = {
				add_modifier = {
					name = ruler_disinterest_in_imperial_politics
					months = normal_modifier_time
					multiplier = 0.5
				}
			}
		}
		
		scope:collegia_urban_state = {
			add_modifier = {
				name = suppressing_the_collegia
				months = normal_modifier_time
			}
		}
		
		if = {
			limit = {
				scope:main_character = {
					OR = {
						has_trait = master_bureaucrat
						has_trait = basic_political_operator
						has_trait = experienced_political_operator
						has_trait = expert_political_operator
					}
				}
			}
			custom_tooltip = did_not_meet_expectations_FoRE3_went_away
			scope:main_character = {
				refused_to_do_what_was_expected_effect = yes
			}
		}
	}
	
	option = {
		name = fall_of_rome_events.4.c
		highlighted_option = yes
		trigger = {
			OR = {
				scope:main_character = { 
					OR = {
						is_interest_group_type = ig_trade_unions 
						has_socialist_ideology = yes
					}
				}
				ROOT = { has_law = law_type:law_council_republic }		# rulers can side with the workers specifically if they're also labor-friend, or just in a council republic
			}
		}
		
		scope:collegia_urban_state = {
			add_modifier = {
				name = labor_collegia_victorious
				months = normal_modifier_time
			}
		}
		
		if = {
			limit = {
				exists = scope:labor_interest_group
			}
			scope:labor_interest_group = {
				if = {
					limit = {
						has_modifier = supported_by_imperial_action
					}
					hidden_effect = {
						remove_modifier = supported_by_imperial_action
					}
				}
				add_modifier = {
					name = supported_by_imperial_action
					months = normal_modifier_time
				}
			}
		}
		
		if = {
			limit = {
				exists = scope:plutocrat_interest_group
			}
			scope:plutocrat_interest_group = {
				if = {
					limit = {
						has_modifier = targeted_by_imperial_action
					}
					hidden_effect = {
						remove_modifier = targeted_by_imperial_action
					}
				}
				add_modifier = {
					name = targeted_by_imperial_action
					months = normal_modifier_time
				}
			}
		}
		
		if = {
			limit = {
				scope:main_character = {
					OR = {
						is_interest_group_type = ig_industrialists 
						has_reactionary_ideology = yes
					}
				}
			}
			custom_tooltip = did_not_meet_expectations_FoRE4_not_pro_plutocrat
			scope:main_character = {
				refused_to_do_what_was_expected_effect = yes
			}
		}
	}
	
	option = {
		name = fall_of_rome_events.4.dd
		highlighted_option = yes
		trigger = {
			scope:main_character = { 
				OR = {
					interest_group = {
						is_interest_group_type = ig_industrialists 
					}
					has_reactionary_ideology = yes
				}
			}
			ROOT = { NOT = { has_law = law_type:law_council_republic } } # an industrialist cannot be partisan against the workers if they're working within a council republic
		}
		
		scope:collegia_urban_state = {
			add_modifier = {
				name = plutocrat_societates_victorious
				months = normal_modifier_time
			}
		}
		
		if = {
			limit = {
				exists = scope:plutocrat_interest_group
			}
			scope:plutocrat_interest_group = {
				if = {
					limit = {
						has_modifier = supported_by_imperial_action
					}
					hidden_effect = {
						remove_modifier = supported_by_imperial_action
					}
				}
				add_modifier = {
					name = supported_by_imperial_action
					months = normal_modifier_time
				}
			}
		}
		
		if = {
			limit = {
				exists = scope:labor_interest_group
			}
			scope:labor_interest_group = {
				if = {
					limit = {
						has_modifier = targeted_by_imperial_action
					}
					hidden_effect = {
						remove_modifier = targeted_by_imperial_action
					}
				}
				add_modifier = {
					name = targeted_by_imperial_action
					months = normal_modifier_time
				}
			}
		}
		
		if = {
			limit = {
				scope:main_character = {
					OR = {
						is_interest_group_type = ig_trade_unions 
						has_socialist_ideology = yes
					}
				}
			}
			custom_tooltip = did_not_meet_expectations_FoRE4_not_pro_worker
			scope:main_character = {
				refused_to_do_what_was_expected_effect = yes
			}
		}
	}
}

fall_of_rome_events.5 = { # Aut Caesar Aut Nihil
	type = country_event
	placement = root
	duration = 3
	
	cooldown = { months = short_modifier_time }

	title = fall_of_rome_events.5.t
	desc = fall_of_rome_events.5.d
	flavor = fall_of_rome_events.5.f

	event_image = {
		video = "unspecific_politicians_arguing"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	icon = "gfx/interface/icons/event_icons/event_fire.dds"
	
	immediate = {
		save_scope_as = main_character_country
		ruler = {
			save_scope_as = main_character
			interest_group = {
				save_scope_as = main_character_ig
			}
		}
		if = {
			limit = {
				any_scope_character = {
					is_heir = yes
				}
			}
			random_scope_character = {
				limit = {
					is_heir = yes
				}
				save_scope_as = main_character_heir
			}
		}
		capital.region = {
			save_scope_as = capital_region
		}
		random_scope_state = {
			limit = {
				is_capital = no
				is_incorporated = yes
				NOT = {
					region = scope:capital_region
				}
			}
			save_scope_as = potential_usurper_state
		}
		ordered_interest_group = {
			limit = {
				is_marginal = no
				ig_approval <= unhappy
				leader = {
					OR = {
						has_trait = ambitious
						has_trait = reckless
					}
				}
				NOT = {
					any_scope_character = {
						is_ruler = yes
					}
				}
			}
			order_by = ig_clout
			save_scope_as = usurper_ig
			leader = {
				save_scope_as = usurper_ig_leader
			}
		}
	}

	trigger = {
		has_journal_entry = je_crisis_of_illegitimacy
		OR = {
			AND = {
				exists = scope:target 			# so that it only triggers on the on_diplo_play_back_down bit if it's ROOT that backs down
				scope:target ?= ROOT
			}
			NOT = { exists = scope:target }
		}
		any_interest_group = {
			is_marginal = no
			ig_approval <= unhappy
			leader = {
				OR = {
					has_trait = ambitious
					has_trait = reckless
				}
			}
			NOT = {
				any_scope_character = {
					is_ruler = yes
				}
			}
		}
		capital.region = {
			save_temporary_scope_as = capital_region_temp
		}
		any_scope_state = {
			is_capital = no
			is_incorporated = yes
			NOT = {
				region = scope:capital_region_temp
			}
		}
	}
	
	option = {
		name = fall_of_rome_events.5.a
		default_option = yes

		if = {
			limit = {
				NOT = { exists = c:RE1 }
			}
			create_country = {
				tag = RE1
				origin = this
				state = scope:potential_usurper_state
				on_created = {
					set_variable = unclaimed_claimant_state
				}
			}
		}
		else_if = {
			limit = {
				NOT = { exists = c:RE2 }
			}
			create_country = {
				tag = RE2
				origin = this
				state = scope:potential_usurper_state
				on_created = {
					set_variable = unclaimed_claimant_state
				}
			}
		}
		else_if = {
			limit = {
				NOT = { exists = c:RE3 }
			}
			create_country = {
				tag = RE3
				origin = this
				state = scope:potential_usurper_state
				on_created = {
					set_variable = unclaimed_claimant_state
				}
			}
		}
		else_if = {
			limit = {
				NOT = { exists = c:RE4 }
			}
			create_country = {
				tag = RE4
				origin = this
				state = scope:potential_usurper_state
				on_created = {
					set_variable = unclaimed_claimant_state
				}
			}
		}
		else = {
			create_dynamic_country = {
				origin = this
				tier = kingdom
				culture = cu:roman
				capital = scope:potential_usurper_state
				color = { 172 49 99 } # average of WRE and ERE colors
				cede_state_trigger = {
				}
				on_created = {
					set_variable = dynamic_roman_breakaway
					set_variable = unclaimed_claimant_state
				}
			}
		}

		scope:main_character = {
			add_character_role = agitator
			exile_character = yes
			set_variable = roman_claimant_exile
		}
		scope:usurper_ig_leader = {
			set_character_as_ruler = yes
		}
# commented-out section doesn't work
#		if = {
#			limit = {
#				scope:usurper_ig ?= {
#					has_party = no
#				}
#			}
#			set_ruling_interest_groups = { scope:usurper_ig }
#		}
		if = {
			limit = {
				scope:usurper_ig ?= {
					has_party = yes
				}
			}
			scope:usurper_ig.party = {
				set_ruling_party = yes
			}
		}
		random_country = {
			limit = { has_variable = unclaimed_claimant_state }
			save_temporary_scope_as = usurper_country
			capital = {
				state_region = {
					add_claim = scope:main_character_country
				}
				random_neighbouring_state = {
					limit = {
						owner = { scope:main_character_country = this }
						is_incorporated = yes
					}
					set_state_owner = scope:usurper_country
					state_region = {
						add_claim = scope:main_character_country
					}
				}
				random_neighbouring_state = {
					limit = {
						owner = { scope:main_character_country = this }
						is_incorporated = yes
					}
					set_state_owner = scope:usurper_country
					state_region = {
						add_claim = scope:main_character_country
					}
				}
			}
			remove_variable = unclaimed_claimant_state
			trigger_event = { id = fall_of_rome_events.6 }
		}
	}
	
	option = {
		name = fall_of_rome_events.5.b
		
		trigger = {
			scope:main_character.popularity > scope:usurper_ig_leader.popularity
		}
		
		scope:usurper_ig = {
			add_modifier = {
				name = foiled_by_the_mob
				months = normal_modifier_time
				is_decaying = yes
			}
		}
	}
}

fall_of_rome_events.6 = {
	type = country_event
	hidden = yes

	immediate = {
		random_character_in_exile_pool = {
			limit = { has_variable = roman_claimant_exile }
			transfer_character = ROOT
			set_character_as_ruler = yes
			remove_character_role = agitator
			interest_group = {
				add_ruling_interest_group = yes
			}
			remove_variable = roman_claimant_exile
			set_variable = roman_claimant_established
		}
		every_interest_group = {
			limit = {
				is_in_government = yes
				NOT = {
					any_scope_character = {
						is_ruler = yes
					}
				}
			}
			remove_ruling_interest_group = yes
		}

		# changing the primary culture in some circumstances. not trying to make it local, just indicative of which side of the East/Wide divide this Roman state is on.
		if = {
			limit = {
				capital = {
					NOR = {
						region = sr:region_england
						region = sr:region_north_sea_coast
						region = sr:region_iberia
						region = sr:region_france
						region = sr:region_occitania
						region = sr:region_rhine
						region = sr:region_italy
						region = sr:region_balkans
						region = sr:region_north_germany
						region = sr:region_south_germany
						region = sr:region_baltic
						region = sr:region_poland
						region = sr:region_north_africa
					}
				}
				NOT = { country_has_primary_culture = cu:greek }
			}
			add_primary_culture = cu:greek
			if = {
				limit = { country_has_primary_culture = cu:roman }
				remove_primary_culture = cu:roman
			}
		}
		else_if = {
			limit = {
				capital = {
					OR = {
						region = sr:region_england
						region = sr:region_north_sea_coast
						region = sr:region_iberia
						region = sr:region_france
						region = sr:region_occitania
						region = sr:region_rhine
						region = sr:region_italy
						region = sr:region_balkans
						region = sr:region_north_germany
						region = sr:region_south_germany
						region = sr:region_baltic
						region = sr:region_poland
						region = sr:region_north_africa
					}
				}
				NOT = { country_has_primary_culture = cu:roman }
			}
			add_primary_culture = cu:roman
			if = {
				limit = { country_has_primary_culture = cu:greek }
				remove_primary_culture = cu:greek
			}
		}
		# if it's outside either of these zones, I dunno man, let's just see what they do
	}
}

fall_of_rome_events.7 = { # Language Reform?
	type = country_event
	placement = root
	duration = 3

	title = fall_of_rome_events.7.t
	desc = fall_of_rome_events.7.d
	flavor = fall_of_rome_events.7.f

	event_image = {
		video = "southamerica_aristocrats"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	icon = "gfx/interface/icons/event_icons/event_fire.dds"

	trigger = {
		NOT = { has_variable = roman_language_debate }
		is_at_war = no
		ig:ig_intelligentsia = { 
			ig_clout >= 0.15 # The Intelligentsia does not need to be in government, there just have to be enough loud nerds around
			leader = { NOT = { has_ideology = ideology:ideology_traditionalist } }
		}
	}

	immediate = {
		set_variable = roman_language_debate
	}

	option = {
		default_option = yes
		name = fall_of_rome_events.7.a

		every_interest_group = {
			limit = {
				OR = {
					is_interest_group_type = ig_intelligentsia

					AND = {	# Book-smart leaders who aren't reactionary also have an opinion on language reform
						NOT = { is_interest_group_type = ig_landowners }
						leader = {
							AND = {
								NOT = { has_ideology = ideology:ideology_traditionalist }
								OR = {
									has_trait = erudite
									has_ideology = ideology:ideology_reformer
								}
							}
						}
					}
				}
			}
			add_modifier = {
				name = rejecting_the_new
				months = long_modifier_time
			}
		}
		every_interest_group = {
			limit = {
				OR = {
					is_interest_group_type = ig_landowners

					AND = {	# Reactionaries have an opinion on language reform
						NOT = { is_interest_group_type = ig_intelligentsia }
						leader = {
							has_ideology = ideology:ideology_traditionalist
						}
					}
				}
			}
			add_modifier = {
				name = embracing_the_old
				months = long_modifier_time
			}		
		}
		add_modifier = {
			name = promoting_classical_latin
			months = very_long_modifier_time
		}
	}

	option = {
		name = fall_of_rome_events.7.b

		every_interest_group = {
			limit = {
				OR = {
					is_interest_group_type = ig_intelligentsia

					AND = {	# Book-smart leaders who aren't reactionary also have an opinion on language reform
						NOT = { is_interest_group_type = ig_landowners }
						leader = {
							AND = {
								NOT = { has_ideology = ideology:ideology_traditionalist }
								OR = {
									has_trait = erudite
									has_ideology = ideology:ideology_reformer
								}
							}
						}
					}
				}
			}
			add_modifier = {
				name = embracing_the_new
				months = long_modifier_time
			}
		}
		every_interest_group = {
			limit = {
				OR = {
					is_interest_group_type = ig_landowners

					AND = {	# Reactionaries have an opinion on language reform
						NOT = { is_interest_group_type = ig_intelligentsia }
						leader = {
							has_ideology = ideology:ideology_traditionalist
						}
					}
				}
			}
			add_modifier = {
				name = rejecting_the_old
				months = long_modifier_time
			}		
		}
		add_modifier = {
			name = promoting_the_vulgar_tongue
			months = very_long_modifier_time
		}
	}

	option = {
		name = fall_of_rome_events.7.c
		highlighted_option = yes

		trigger = {
			institution_investment_level = {
				institution = institution_schools
				value > 1
			}
		}

		every_interest_group = {
			limit = {
				leader = {
					NOT = { has_ideology = ideology:ideology_positivist }
					OR = {
						has_ideology = ideology:ideology_traditionalist
						has_trait = erudite
					}
				}
			}
			add_modifier = {
				name = classicist_enthusiasm
				months = long_modifier_time
			}
		}

		every_interest_group = {	# STEMlords angry about liberal arts funding
			limit = {
				leader = {
					has_ideology = ideology:ideology_positivist
				}
			}
			add_modifier = {
				name = overemphasis_on_liberal_arts
				months = long_modifier_time
			}
		}

		add_modifier = {
			name = classical_coursework
			months = very_long_modifier_time
		}
	}
}

fall_of_rome_events.8 = { # The Great Apostasy
	type = country_event
	placement = root
	duration = 3

	title = fall_of_rome_events.8.t
	desc = fall_of_rome_events.8.d
	flavor = fall_of_rome_events.8.f

	event_image = {
		video = "votp_hostile_court"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	icon = "gfx/interface/icons/event_icons/event_fire.dds"

	# triggered by decision

	immediate = {
		ruler = {
			save_scope_as = insane_ruler
		}
		ig:ig_devout.leader = {
			save_scope_as = devout_leader
		}
	}
	
	cancellation_trigger = {
		NOT = {
			exists = scope:insane_ruler
		}
	}

	option = {
		default_option = yes
		name = fall_of_rome_events.8.a
		
		scope:insane_ruler = {
			kill_character = yes
		}
	}
	
	option = {
		name = fall_of_rome_events.8.b
		
		scope:insane_ruler = {
			if = {
				limit = {
					scope:insane_ruler.interest_group = {
						is_interest_group_type = ig_devout
					}
				}
				add_modifier = {
					name = the_apostate_but_worse
					months = -1
				}
			}
			else = {
				add_modifier = {
					name = the_apostate
					months = -1
				}
			}
		}
	}
	
	option = {
		name = fall_of_rome_events.8.c
		
		random_list = {
			50 = {
				scope:insane_ruler = {
					kill_character = yes
				}
			}
			50 = {
				scope:insane_ruler = {
					remove_trait = psychological_affliction
				}
				if = {
					limit = {
						scope:insane_ruler = { has_trait = pious }
					}
					custom_tooltip = {
						text = fall_of_rome_events.2.c.tt # The ruler's faith has been shattered by this ordeal.
						scope:insane_ruler = {
							remove_trait = pious 
						}
					}
				}
			}
		}
	}
		
	option = {
		name = fall_of_rome_events.8.dd
		highlighted_option = yes
		trigger = {
			ig:ig_devout = {
				leader = {
					OR = {
						has_trait = charismatic
						has_trait = experienced_diplomat
						has_trait = masterful_diplomat
						has_trait = inspirational_orator
						has_trait = demagogue
						has_trait = firebrand
					}
					is_ruler = no
				}
			}
			hidden_trigger = {
				scope:insane_ruler.interest_group = {
					NOR = { 
						is_interest_group_type = ig_industrialists 
						is_interest_group_type = ig_intelligentsia
					}
				}
			}
		}
		
		scope:insane_ruler = {
			if = {
				limit = { NOT = { has_ideology = ideology:ideology_theocrat } }
				set_ideology = ideology:ideology_theocrat
			}
			remove_trait = psychological_affliction
			if = {
				limit = {
					scope:insane_ruler = { NOT = { has_trait = pious } }
				}
				add_trait = pious
			}
		}
	}
}

fall_of_rome_events.9 = { # Bagaudae Disturbances
	type = country_event
	placement = scope:bagaudae_state
	duration = 3
	
	cooldown = { months = short_modifier_time }

	title = fall_of_rome_events.9.t
	desc = fall_of_rome_events.9.d
	flavor = fall_of_rome_events.9.f

	event_image = {
		video = "unspecific_devastation"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	icon = "gfx/interface/icons/event_icons/event_fire.dds"

	trigger = {
		ruler.interest_group = {
			NOR = { 
				has_modifier = ruler_prioritizes_imperial_politics 
				has_modifier = ruler_disinterest_in_imperial_politics
			}
		}
		capital.region = {
			save_temporary_scope_as = temp_capital_region
		}
		any_scope_state = {	# the event must occur in the provinces, away from the metropole
			is_capital = no
			NOT = {
				region = scope:temp_capital_region
				OR = {
					has_modifier = bagaudic_unrest
					has_modifier = suppressing_the_bagaudae
				}
			}
			total_urbanization < 6
		}
	}

	immediate = {
		ruler = {
			save_scope_as = main_character
			interest_group = {
				save_scope_as = main_character_ig
			}
		}
		capital.region = {
			save_scope_as = capital_region
		}
		random_scope_state = {
			limit = {
				is_capital = no
				NOT = {
					region = scope:capital_region
					OR = {
						has_modifier = bagaudic_unrest
						has_modifier = suppressing_the_bagaudae
					}
				}
				total_urbanization < 6
			}
			save_scope_as = bagaudae_state
		}
	}
	
	cancellation_trigger = {
		NOT = {
			exists = scope:bagaudae_state
		}
	}

	option = {
		name = fall_of_rome_events.9.a # stay at court
		default_option = yes
		
		ai_chance = {
			base = 1
			modifier = {
				scope:main_character = {
					OR = {
						has_trait = master_bureaucrat
						has_trait = basic_political_operator
						has_trait = experienced_political_operator
						has_trait = expert_political_operator
					}
				}
				add = 10
			}
			modifier = {
				scope:main_character = {
					OR = {
						has_role = general
						has_trait = brave
						has_trait = traditionalist_commander
						has_trait = popular_commander
						has_trait = celebrity_commander
					}
				}
				add = -1
			}
		}
		
		scope:main_character_ig = {
			add_modifier = {
				name = ruler_prioritizes_imperial_politics
				months = normal_modifier_time
			}
		}
		
		if = {
			limit = {
				country_has_voting_franchise = yes
			}
			custom_tooltip = fall_of_rome_events_3_let_local_reps_handle_it
			scope:bagaudae_state = {
				add_modifier = {
					name = bagaudic_unrest
					months = normal_modifier_time
					multiplier = 0.5
				}
			}
		}
		else = {
			scope:bagaudae_state = {
				add_modifier = {
					name = bagaudic_unrest
					months = normal_modifier_time
				}
			}
		}
		
		if = {
			limit = {
				scope:main_character = {
					OR = {
						has_role = general
						has_trait = brave
						has_trait = traditionalist_commander
						has_trait = popular_commander
						has_trait = celebrity_commander
					}
				}
			}
			custom_tooltip = did_not_meet_expectations_FoRE3_stayed_at_home
			scope:main_character = {
				refused_to_do_what_was_expected_effect = yes
			}
		}
	}
	
	option = {
		name = fall_of_rome_events.9.b # go to the troublesome province
		
		ai_chance = {
			base = 1
			modifier = {
				scope:main_character = {
					OR = {
						has_role = general
						has_trait = brave
						has_trait = traditionalist_commander
						has_trait = popular_commander
						has_trait = celebrity_commander
					}
				}
				add = 10
			}
			modifier = {
				scope:main_character = {
					OR = {
						has_trait = master_bureaucrat
						has_trait = basic_political_operator
						has_trait = experienced_political_operator
						has_trait = expert_political_operator
					}
				}
				add = -1
			}
		}
		
		if = {
			limit = {
				country_has_voting_franchise = yes
			}
			custom_tooltip = fall_of_rome_events_3_fellow_partisans_mitigate_neglect
			scope:main_character_ig = {
				add_modifier = {
					name = ruler_disinterest_in_imperial_politics
					months = normal_modifier_time
					multiplier = 0.5
				}
			}
		}
		else = {
			scope:main_character_ig = {
				add_modifier = {
					name = ruler_disinterest_in_imperial_politics
					months = normal_modifier_time
					multiplier = 0.5
				}
			}
		}
		
		scope:bagaudae_state = {
			add_modifier = {
				name = suppressing_the_bagaudae
				months = normal_modifier_time
			}
		}
		
		if = {
			limit = {
				scope:main_character = {
					OR = {
						has_trait = master_bureaucrat
						has_trait = basic_political_operator
						has_trait = experienced_political_operator
						has_trait = expert_political_operator
					}
				}
			}
			custom_tooltip = did_not_meet_expectations_FoRE3_went_away
			scope:main_character = {
				refused_to_do_what_was_expected_effect = yes
			}
		}
	}
}

# false version of Crisis of Illegitimacy startup event for WRE
fall_of_rome_events.10 = {
	type = country_event
	placement = ROOT
	
	title = fall_of_rome_events.1.t
	desc = fall_of_rome_events.1.d
	flavor = fall_of_rome_events.1.f
	
	event_image = {
		video = "unspecific_politicians_arguing"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	icon = "gfx/interface/icons/ig_icons/armed_forces.dds"
	
	duration = 3
	
	trigger = {
	}

	immediate = {
		save_scope_as = rome_on_the_edge
		capital = {
			save_scope_as = capital_scope
		}

		ordered_interest_group = {
			limit = {
				is_powerful = yes
				leader = {
					is_ruler = no
					OR = {
						has_trait = ambitious
						has_trait = reckless
					}
				}
				#leader.popularity > ruler.popularity
			}
			order_by = ig_clout
			save_scope_as = ambitus_ig
			leader = {
				save_scope_as = ambitus_ig_leader
				set_variable = ambitus_ig_leader_tracked
			}
		}
	}
	option = { 
		name = fall_of_rome_events.1.a
		default_option = yes
		show_as_tooltip = {
			add_journal_entry = { type = je_crisis_of_illegitimacy }
		}
	}
}
